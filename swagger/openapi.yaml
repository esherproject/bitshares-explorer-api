openapi: 3.0.2
info:
  title: BitShares Insight API
  description: Provides access to historical and rehashed data of the BitShares Blockchain
    for easy processing.
  version: '0.1'
paths:
  /status:
    get:
      tags:
      - status
      summary: Route Status
      operationId: route_status_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /:
    get:
      tags:
      - status
      summary: Route Overview
      description: Redirect to docs
      operationId: route_overview__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/account_name:
    get:
      tags:
      - openexplorer
      summary: Route Account Name
      description: Resolves account id to name
      operationId: route_account_name_openexplorer_account_name_get
      parameters:
      - required: true
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/account_balances:
    get:
      tags:
      - openexplorer
      summary: Route Account Balances
      description: Returns total balances of this account
      operationId: route_account_balances_openexplorer_account_balances_get
      parameters:
      - required: true
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      - description: If true, returns symbols and floats, otherwise asset ids and
          integers (satoshis).
        required: false
        schema:
          title: Resolve To Float And Symbol
          type: boolean
          description: If true, returns symbols and floats, otherwise asset ids and
            integers (satoshis).
          default: true
        name: resolve_to_float_and_symbol
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/asset:
    get:
      tags:
      - openexplorer
      summary: Route Asset
      description: Resolves asset id to name
      operationId: route_asset_openexplorer_asset_get
      parameters:
      - required: true
        schema:
          title: Asset Id
          type: string
        name: asset_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/asset_and_volume:
    get:
      tags:
      - openexplorer
      summary: Route Asset And Volume
      operationId: route_asset_and_volume_openexplorer_asset_and_volume_get
      parameters:
      - required: true
        schema:
          title: Asset Id
          type: string
        name: asset_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/block:
    get:
      tags:
      - openexplorer
      summary: Route Block
      operationId: route_block_openexplorer_block_get
      parameters:
      - required: true
        schema:
          title: Block Num
          type: integer
        name: block_num
        in: query
      - required: false
        schema:
          title: Ignore Virtual Operations
          type: boolean
          default: false
        name: ignore_virtual_operations
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/full_account:
    get:
      tags:
      - openexplorer
      summary: Route Full Account
      description: Resolves account id to full account
      operationId: route_full_account_openexplorer_full_account_get
      parameters:
      - required: true
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/es/account_history:
    get:
      tags:
      - openexplorer
      summary: Route Es Account History
      operationId: route_es_account_history_openexplorer_es_account_history_get
      parameters:
      - required: false
        schema:
          title: Account Id
        name: account_id
        in: query
      - required: false
        schema:
          title: Operation Type
        name: operation_type
        in: query
      - required: false
        schema:
          title: 'From '
          default: 0
        name: from_
        in: query
      - required: false
        schema:
          title: Size
          default: 10
        name: size
        in: query
      - required: false
        schema:
          title: From Date
          default: '2015-10-10'
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          default: now
        name: to_date
        in: query
      - required: false
        schema:
          title: Sort By
          default: -operation_id_num
        name: sort_by
        in: query
      - required: false
        schema:
          title: Search After
        name: search_after
        in: query
      - required: false
        schema:
          title: Type
          default: data
        name: type
        in: query
      - required: false
        schema:
          title: Agg Field
          default: operation_type
        name: agg_field
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/export/account_history:
    get:
      tags:
      - openexplorer
      summary: Route Export Account History
      operationId: route_export_account_history_openexplorer_export_account_history_get
      parameters:
      - required: false
        schema:
          title: Account Id
        name: account_id
        in: query
      - required: false
        schema:
          title: From Date
          default: '2015-10-10'
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          default: now
        name: to_date
        in: query
      - required: false
        schema:
          title: Group By
          default: day
        name: group_by
        in: query
      - required: false
        schema:
          title: Export Format
          default: raw
        name: export_format
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/header:
    get:
      tags:
      - openexplorer
      summary: Route Header
      operationId: route_header_openexplorer_header_get
      parameters:
      - required: false
        schema:
          title: Default Quote
          default: BTC
        name: default_quote
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/global_properties:
    get:
      tags:
      - openexplorer
      summary: Route Global Properties
      operationId: route_global_properties_openexplorer_global_properties_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/witnesses:
    get:
      tags:
      - openexplorer
      summary: Route Witnesses
      operationId: route_witnesses_openexplorer_witnesses_get
      parameters:
      - required: false
        schema:
          title: Status
          default: all
        name: status
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/witness:
    get:
      tags:
      - openexplorer
      summary: Route Witness
      operationId: route_witness_openexplorer_witness_get
      parameters:
      - required: true
        schema:
          title: Witness Id
          type: string
        name: witness_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/voteable_votes:
    get:
      tags:
      - openexplorer
      summary: Route Voteable Votes
      operationId: route_voteable_votes_openexplorer_voteable_votes_get
      parameters:
      - required: true
        schema:
          title: Id
          type: string
        name: id
        in: query
      - required: false
        schema:
          title: From Date
          type: string
          default: now-1h
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          type: string
          default: now
        name: to_date
        in: query
      - required: false
        schema:
          title: Datapoints
          type: integer
          default: 1
        name: datapoints
        in: query
      - required: false
        schema:
          title: Type
          type: string
          default: voters
        name: type
        in: query
      - required: false
        schema:
          title: Grouplessthan
          type: number
          default: 0.2
        name: grouplessthan
        in: query
      - required: false
        schema:
          title: Add Threshhold
          type: boolean
          default: false
        name: add_threshhold
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/workers:
    get:
      tags:
      - openexplorer
      summary: Route Workers
      operationId: route_workers_openexplorer_workers_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/committee_members:
    get:
      tags:
      - openexplorer
      summary: Route Committee Members
      operationId: route_committee_members_openexplorer_committee_members_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/referrer_count:
    get:
      tags:
      - openexplorer
      summary: Get Referrer Count
      operationId: get_referrer_count_openexplorer_referrer_count_get
      parameters:
      - required: true
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/all_referrers:
    get:
      tags:
      - openexplorer
      summary: Get All Referrers
      operationId: get_all_referrers_openexplorer_all_referrers_get
      parameters:
      - required: true
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      - required: false
        schema:
          title: Page
          type: integer
          default: 0
        name: page
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/top_proxies:
    get:
      tags:
      - openexplorer
      summary: Route Top Proxies
      operationId: route_top_proxies_openexplorer_top_proxies_get
      parameters:
      - required: false
        schema:
          title: Top N
          type: integer
          default: 100
        name: top_n
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/object:
    get:
      tags:
      - openexplorer
      summary: Route Object
      operationId: route_object_openexplorer_object_get
      parameters:
      - required: true
        schema:
          title: Object
          type: string
        name: object
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/operation:
    get:
      tags:
      - openexplorer
      summary: Route Operation
      operationId: route_operation_openexplorer_operation_get
      parameters:
      - required: true
        schema:
          title: Operation Id
        name: operation_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/markets:
    get:
      tags:
      - openexplorer
      summary: Route Markets
      operationId: route_markets_openexplorer_markets_get
      parameters:
      - required: true
        schema:
          title: Asset Id
          type: string
        name: asset_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/top_smartcoins:
    get:
      tags:
      - openexplorer
      summary: Route Top Smartcoins
      operationId: route_top_smartcoins_openexplorer_top_smartcoins_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/top_markets:
    get:
      tags:
      - openexplorer
      summary: Route Top Markets
      operationId: route_top_markets_openexplorer_top_markets_get
      parameters:
      - required: false
        schema:
          title: Top N
          type: integer
          default: 10
        name: top_n
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/asset_holders_count:
    get:
      tags:
      - openexplorer
      summary: Route Asset Holders Count
      operationId: route_asset_holders_count_openexplorer_asset_holders_count_get
      parameters:
      - required: true
        schema:
          title: Asset Id
          type: string
        name: asset_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/asset_holders:
    get:
      tags:
      - openexplorer
      summary: Route Asset Holders
      operationId: route_asset_holders_openexplorer_asset_holders_get
      parameters:
      - required: true
        schema:
          title: Asset Id
          type: string
        name: asset_id
        in: query
      - required: false
        schema:
          title: Start
          default: 0
        name: start
        in: query
      - required: false
        schema:
          title: Limit
          default: 20
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/es/trx:
    get:
      tags:
      - openexplorer
      summary: Route Es Trx
      operationId: route_es_trx_openexplorer_es_trx_get
      parameters:
      - required: false
        schema:
          title: Trx
          type: string
          default: ''
        name: trx
        in: query
      - required: false
        schema:
          title: 'From '
          default: 0
        name: from_
        in: query
      - required: false
        schema:
          title: Size
          default: 1000
        name: size
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/most_active_markets:
    get:
      tags:
      - openexplorer
      summary: Route Most Active Markets
      operationId: route_most_active_markets_openexplorer_most_active_markets_get
      parameters:
      - required: false
        schema:
          title: Of Last Hours
          type: integer
          default: 24
        name: of_last_hours
        in: query
      - required: false
        schema:
          title: Top N
          type: integer
          default: 100
        name: top_n
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/udf/config:
    get:
      tags:
      - openexplorer
      summary: Route Udf Config
      operationId: route_udf_config_openexplorer_udf_config_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/udf/time:
    get:
      tags:
      - openexplorer
      summary: Get Udf Time
      operationId: get_udf_time_openexplorer_udf_time_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/udf/symbols:
    get:
      tags:
      - openexplorer
      summary: Get Udf Symbols
      operationId: get_udf_symbols_openexplorer_udf_symbols_get
      parameters:
      - required: true
        schema:
          title: Symbol
        name: symbol
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/ticker:
    get:
      tags:
      - openexplorer
      summary: Route Ticker
      operationId: route_ticker_openexplorer_ticker_get
      parameters:
      - required: true
        schema:
          title: Base
        name: base
        in: query
      - required: true
        schema:
          title: Quote
        name: quote
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/order_book:
    get:
      tags:
      - openexplorer
      summary: Get Order Book
      operationId: get_order_book_openexplorer_order_book_get
      parameters:
      - required: true
        schema:
          title: Base
        name: base
        in: query
      - required: true
        schema:
          title: Quote
        name: quote
        in: query
      - required: false
        schema:
          title: Limit
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/udf/history:
    get:
      tags:
      - openexplorer
      summary: Get Udf History
      operationId: get_udf_history_openexplorer_udf_history_get
      parameters:
      - required: false
        schema:
          title: Symbol
        name: symbol
        in: query
      - required: true
        schema:
          title: From
        name: from
        in: query
      - required: false
        schema:
          title: To
        name: to
        in: query
      - required: false
        schema:
          title: Resolution
        name: resolution
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/grouped_limit_orders:
    get:
      tags:
      - openexplorer
      summary: Route Grouped Limit Orders
      operationId: route_grouped_limit_orders_openexplorer_grouped_limit_orders_get
      parameters:
      - required: true
        schema:
          title: Quote
        name: quote
        in: query
      - required: true
        schema:
          title: Base
        name: base
        in: query
      - required: false
        schema:
          title: Group
          default: 10
        name: group
        in: query
      - required: false
        schema:
          title: Limit
          default: false
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/accounts:
    get:
      tags:
      - openexplorer
      summary: Get Accounts
      operationId: get_accounts_openexplorer_accounts_get
      parameters:
      - required: false
        schema:
          title: Start
          default: 0
        name: start
        in: query
      - required: false
        schema:
          title: Limit
          default: 100
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/fees:
    get:
      tags:
      - openexplorer
      summary: Get Fees
      operationId: get_fees_openexplorer_fees_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/account_voting_power:
    get:
      tags:
      - openexplorer
      summary: Route Account Voting Power
      operationId: route_account_voting_power_openexplorer_account_voting_power_get
      parameters:
      - required: true
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      - required: false
        schema:
          title: With Details
          type: boolean
          default: true
        name: with_details
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/assets:
    get:
      tags:
      - openexplorer
      summary: Route Assets
      operationId: route_assets_openexplorer_assets_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/dex_total_volume:
    get:
      tags:
      - openexplorer
      summary: Route Dex Total Volume
      operationId: route_dex_total_volume_openexplorer_dex_total_volume_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/daily_volume_dex_dates:
    get:
      tags:
      - openexplorer
      summary: Route Daily Volume Dex Dates
      operationId: route_daily_volume_dex_dates_openexplorer_daily_volume_dex_dates_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/daily_volume_dex_data:
    get:
      tags:
      - openexplorer
      summary: Route Daily Volume Dex Data
      operationId: route_daily_volume_dex_data_openexplorer_daily_volume_dex_data_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/top_uias:
    get:
      tags:
      - openexplorer
      summary: Route Top Uias
      operationId: route_top_uias_openexplorer_top_uias_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/top_holders:
    get:
      tags:
      - openexplorer
      summary: Route Top Holders
      operationId: route_top_holders_openexplorer_top_holders_get
      parameters:
      - required: false
        schema:
          title: Asset Id
          type: string
          default: 1.3.0
        name: asset_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/witnesses_votes:
    get:
      tags:
      - openexplorer
      summary: Route Witnesses Votes
      operationId: route_witnesses_votes_openexplorer_witnesses_votes_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/workers_votes:
    get:
      tags:
      - openexplorer
      summary: Route Workers Votes
      operationId: route_workers_votes_openexplorer_workers_votes_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/committee_votes:
    get:
      tags:
      - openexplorer
      summary: Route Committee Votes
      operationId: route_committee_votes_openexplorer_committee_votes_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/block_statistics:
    get:
      tags:
      - openexplorer
      summary: Route Block Statistics
      operationId: route_block_statistics_openexplorer_block_statistics_get
      parameters:
      - required: false
        schema:
          title: Last X Blocks
          type: integer
          default: 20
        name: last_x_blocks
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/statistics_per_x:
    get:
      tags:
      - openexplorer
      summary: Route Statistics Per X
      operationId: route_statistics_per_x_openexplorer_statistics_per_x_get
      parameters:
      - required: false
        schema:
          title: Days
          default: 1
        name: days
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/search:
    get:
      tags:
      - openexplorer
      summary: Route Search
      operationId: route_search_openexplorer_search_get
      parameters:
      - required: true
        schema:
          title: Expression
          type: string
        name: expression
        in: query
      - required: false
        schema:
          title: Tags
          type: array
          items:
            type: string
          default: []
        name: tags
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/blockchain:
    get:
      tags:
      - openexplorer
      summary: Route Blockchain
      operationId: route_blockchain_openexplorer_blockchain_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/premium:
    get:
      tags:
      - openexplorer
      summary: Route Premium
      operationId: route_premium_openexplorer_premium_get
      parameters:
      - required: true
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/pricefeed:
    get:
      tags:
      - openexplorer
      summary: Route Pricefeed
      operationId: route_pricefeed_openexplorer_pricefeed_get
      parameters:
      - required: false
        schema:
          title: Publisher
          type: string
        name: publisher
        in: query
      - required: false
        schema:
          title: Asset
          type: string
        example: CNY
        name: asset
        in: query
      - required: false
        schema:
          title: From Date
          default: now-1h
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          default: now
        name: to_date
        in: query
      - required: false
        schema:
          title: As List
          type: boolean
          default: true
        name: as_list
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/voting_lock:
    get:
      tags:
      - openexplorer
      summary: Route Voting Lock
      description: Get all core tokens that are locked for voting for this account
      operationId: route_voting_lock_openexplorer_voting_lock_get
      parameters:
      - required: true
        schema:
          title: Account Id Or Name
        name: account_id_or_name
        in: query
      - required: false
        schema:
          title: Resolve Tickets
          type: boolean
          default: false
        name: resolve_tickets
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/voting_locks:
    get:
      tags:
      - openexplorer
      summary: Route Voting Locks
      description: Get all core tokens that are locked for voting
      operationId: route_voting_locks_openexplorer_voting_locks_get
      parameters:
      - required: false
        schema:
          title: Size
          type: integer
          default: 50
        name: size
        in: query
      - required: false
        schema:
          title: Per Account
          type: boolean
          default: true
        name: per_account
        in: query
      - required: false
        schema:
          title: Resolve Tickets
          type: boolean
          default: false
        name: resolve_tickets
        in: query
      - required: false
        schema:
          title: Ignore Less Than
          type: integer
          default: 0
        name: ignore_less_than
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/history:
    get:
      tags:
      - openexplorer
      summary: Route History
      operationId: route_history_openexplorer_history_get
      parameters:
      - required: false
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      - required: false
        schema:
          title: Offset
          type: integer
          default: 0
        name: offset
        in: query
      - required: false
        schema:
          title: Limit
          type: integer
          default: 20
        name: limit
        in: query
      - required: false
        schema:
          title: From Date
          type: string
          default: now-90d
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          type: string
          default: now
        name: to_date
        in: query
      - required: false
        schema:
          title: Filter By
          type: string
        name: filter_by
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/pools:
    get:
      tags:
      - openexplorer
      summary: Route Pools
      operationId: route_pools_openexplorer_pools_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/pool:
    get:
      tags:
      - openexplorer
      summary: Route Pool
      operationId: route_pool_openexplorer_pool_get
      parameters:
      - required: false
        schema:
          title: Pool Id
          type: string
          default: 1.19.0
        name: pool_id
        in: query
      - required: false
        schema:
          title: Full
          type: boolean
          default: false
        name: full
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/pool_balance_history:
    get:
      tags:
      - openexplorer
      summary: Route Pool Balance History
      operationId: route_pool_balance_history_openexplorer_pool_balance_history_get
      parameters:
      - required: false
        schema:
          title: Pool Id
          type: string
          default: 1.19.0
        name: pool_id
        in: query
      - required: false
        schema:
          title: Last X
          type: integer
          default: 100
        name: last_x
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/pool/udf/config:
    get:
      tags:
      - openexplorer
      summary: Route Pool Udf Config
      operationId: route_pool_udf_config_openexplorer_pool_udf_config_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/pool/udf/time:
    get:
      tags:
      - openexplorer
      summary: Get Pool Udf Time
      operationId: get_pool_udf_time_openexplorer_pool_udf_time_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /openexplorer/pool/udf/symbols:
    get:
      tags:
      - openexplorer
      summary: Get Pool Udf Symbols
      operationId: get_pool_udf_symbols_openexplorer_pool_udf_symbols_get
      parameters:
      - required: true
        schema:
          title: Symbol
        name: symbol
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/pool/udf/history:
    get:
      tags:
      - openexplorer
      summary: Get Pool Udf History
      operationId: get_pool_udf_history_openexplorer_pool_udf_history_get
      parameters:
      - required: false
        schema:
          title: Symbol
        name: symbol
        in: query
      - required: true
        schema:
          title: From
        name: from
        in: query
      - required: false
        schema:
          title: To
        name: to
        in: query
      - required: false
        schema:
          title: Resolution
        name: resolution
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /openexplorer/creditoffers:
    get:
      tags:
      - openexplorer
      summary: Route Creditoffers
      operationId: route_creditoffers_openexplorer_creditoffers_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /voting/account_power:
    get:
      tags:
      - voting
      summary: Route Account Power
      operationId: route_account_power_voting_account_power_get
      parameters:
      - required: false
        schema:
          title: From Date
          type: string
          default: '2019-01-01'
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          type: string
          default: '2020-01-01'
        name: to_date
        in: query
      - required: false
        schema:
          title: Account
          type: string
          default: 1.2.285
        name: account
        in: query
      - required: false
        schema:
          title: Datapoints
          type: integer
          default: 50
        name: datapoints
        in: query
      - required: false
        schema:
          title: Type
          type: string
          default: total
        name: type
        in: query
      - required: false
        schema:
          title: Grouplessthan
          type: integer
          default: 5
        name: grouplessthan
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /voting/voteable_votes:
    get:
      tags:
      - voting
      summary: Route Voteable Votes
      operationId: route_voteable_votes_voting_voteable_votes_get
      parameters:
      - required: false
        schema:
          title: From Date
          default: '2019-01-01'
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          default: '2020-01-01'
        name: to_date
        in: query
      - required: false
        schema:
          title: Id
          default: 1.14.206
        name: id
        in: query
      - required: false
        schema:
          title: Datapoints
          default: 50
        name: datapoints
        in: query
      - required: false
        schema:
          title: Type
          default: total
        name: type
        in: query
      - required: false
        schema:
          title: Grouplessthan
          default: 5
        name: grouplessthan
        in: query
      - required: false
        schema:
          title: Add Threshhold
          default: true
        name: add_threshhold
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /voting/top_voting_weight:
    get:
      tags:
      - voting
      summary: Route Top Voting Weight
      operationId: route_top_voting_weight_voting_top_voting_weight_get
      parameters:
      - required: false
        schema:
          title: Top N
          type: integer
          default: 10
        name: top_n
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /history/trades_es:
    get:
      tags:
      - history
      summary: Route Trades Es
      description: Returns the trades 1:1 as stored in ElasticSearch, where pays.asset_id
        is quote and receives.asset_id is base
      operationId: route_trades_es_history_trades_es_get
      parameters:
      - description: Asset id or symbol
        required: false
        schema:
          title: Base
          type: string
          description: Asset id or symbol
          default: 1.3.0
        name: base
        in: query
      - description: Asset id or symbol
        required: false
        schema:
          title: Quote
          type: string
          description: Asset id or symbol
          default: 1.3.121
        name: quote
        in: query
      - description: Set to '2015-10-10' to query since the beginning
        required: false
        schema:
          title: From Date
          type: string
          description: Set to '2015-10-10' to query since the beginning
          default: '2020-01-01'
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          type: string
          default: now
        name: to_date
        in: query
      - required: false
        schema:
          title: Size
          type: integer
          default: 10
        name: size
        in: query
      - description: For pagination, set to `operation_id_num` of last entry of previous
          query
        required: false
        schema:
          title: Search After
          type: integer
          description: For pagination, set to `operation_id_num` of last entry of
            previous query
        name: search_after
        in: query
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SortBy'
          default: operation_id_num
        name: sort_by
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /history/trades:
    get:
      tags:
      - history
      summary: Route Trades
      description: Trades postprocessed for explorer, where pays.asset_id is quote
        and receives.asset_id is base
      operationId: route_trades_history_trades_get
      parameters:
      - description: Asset id or symbol
        required: false
        schema:
          title: Base
          type: string
          description: Asset id or symbol
          default: 1.3.0
        name: base
        in: query
      - description: Asset id or symbol
        required: false
        schema:
          title: Quote
          type: string
          description: Asset id or symbol
          default: 1.3.121
        name: quote
        in: query
      - description: Set to '2015-10-10' to query since the beginning
        required: false
        schema:
          title: From Date
          type: string
          description: Set to '2015-10-10' to query since the beginning
          default: '2020-01-01'
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          type: string
          default: now
        name: to_date
        in: query
      - required: false
        schema:
          title: Size
          type: integer
          default: 10
        name: size
        in: query
      - description: For pagination, set to `operation_id_num` of last entry of previous
          query
        required: false
        schema:
          title: Search After
          type: integer
          description: For pagination, set to `operation_id_num` of last entry of
            previous query
        name: search_after
        in: query
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/SortBy'
          default: operation_id_num
        name: sort_by
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /history/paidfees:
    get:
      tags:
      - history
      summary: Get Paid Fees
      description: Sums up all fees paid by the specific account over time
      operationId: get_paid_fees_history_paidfees_get
      parameters:
      - description: Account name or id
        required: false
        schema:
          title: Account
          type: string
          description: Account name or id
        name: account
        in: query
      - description: Set to '2015-10-10' to query since the beginning
        required: false
        schema:
          title: From Date
          type: string
          description: Set to '2015-10-10' to query since the beginning
          default: '2020-01-01'
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          type: string
          default: now
        name: to_date
        in: query
      - required: false
        schema:
          title: Show Ops
          type: boolean
          default: false
        name: show_ops
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /history/assetfees:
    get:
      tags:
      - history
      summary: Route Assetfee
      description: Shows a history of the set fees of an asset over time
      operationId: route_assetfee_history_assetfees_get
      parameters:
      - description: Asset symbol or id
        required: false
        schema:
          title: Asset
          type: string
          description: Asset symbol or id
        name: asset
        in: query
      - description: Set to '2015-10-10' to query since the beginning
        required: false
        schema:
          title: From Date
          type: string
          description: Set to '2015-10-10' to query since the beginning
          default: '2019-01-01'
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          type: string
          default: now
        name: to_date
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /history/transfers:
    get:
      tags:
      - history
      summary: Route Transfers
      operationId: route_transfers_history_transfers_get
      parameters:
      - description: Account id or symbol
        required: false
        schema:
          title: From Account
          type: string
          description: Account id or symbol
        example: 1.2.1787098
        name: from_account
        in: query
      - description: Account id or symbol
        required: false
        schema:
          title: To Account
          type: string
          description: Account id or symbol
        example: 1.2.751875
        name: to_account
        in: query
      - description: Set to '2015-10-10' to query since the beginning
        required: false
        schema:
          title: From Date
          type: string
          description: Set to '2015-10-10' to query since the beginning
          default: now-2M
        name: from_date
        in: query
      - required: false
        schema:
          title: To Date
          type: string
          default: now
        name: to_date
        in: query
      - description: Minimum satoshi amount to be returned as result, if none given
          all
        required: false
        schema:
          title: Minimum Amount
          type: integer
          description: Minimum satoshi amount to be returned as result, if none given
            all
        example: 0
        name: minimum_amount
        in: query
      - description: The asset id that was transferred
        required: false
        schema:
          title: Asset Id
          type: string
          description: The asset id that was transferred
        example: 1.3.0
        name: asset_id
        in: query
      - required: false
        schema:
          title: Size
          type: integer
          default: 10
        name: size
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lookup/headblock:
    get:
      tags:
      - lookup
      summary: Route Headblock
      operationId: route_headblock_lookup_headblock_get
      parameters:
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/DataSource'
          default: blockchain_current_state
        name: source
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lookup/orderbook:
    get:
      tags:
      - lookup
      summary: Route Orderbook
      description: Returns the order book of the indicated market. The amount of orders
        returned may be limited depending the node's settings.
      operationId: route_orderbook_lookup_orderbook_get
      parameters:
      - required: false
        schema:
          title: Base
          type: string
          default: CNY
        name: base
        in: query
      - required: false
        schema:
          title: Quote
          type: string
          default: BTS
        name: quote
        in: query
      - required: false
        schema:
          title: Limit
          type: integer
          default: 200
        name: limit
        in: query
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/OrderBookFormat'
          default: postprocessed
        name: format
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lookup/limitorders:
    get:
      tags:
      - lookup
      summary: Route Limitorders
      description: Returns 100 limit orders of the indicated market in both directions.
      operationId: route_limitorders_lookup_limitorders_get
      parameters:
      - required: false
        schema:
          title: Base
          type: string
          default: CNY
        name: base
        in: query
      - required: false
        schema:
          title: Quote
          type: string
          default: BTS
        name: quote
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lookup/account/limitorders:
    get:
      tags:
      - lookup
      summary: Route Account Limitorders
      description: Returns all limit orders of the given account.
      operationId: route_account_limitorders_lookup_account_limitorders_get
      parameters:
      - required: false
        schema:
          title: Account Id
          type: string
        name: account_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lookup/asset/{asset_id}:
    get:
      tags:
      - lookup
      summary: Route Asset
      description: Returns asset information and details of the given asset id (1.3.X)
        or symbol
      operationId: route_asset_lookup_asset__asset_id__get
      parameters:
      - required: true
        schema:
          title: Asset Id
          type: string
        name: asset_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /lookup/ticker:
    get:
      tags:
      - lookup
      summary: Get Ticker
      description: Returns the ticker of the indicated market
      operationId: get_ticker_lookup_ticker_get
      parameters:
      - required: false
        schema:
          title: Base
          type: string
          default: CNY
        name: base
        in: query
      - required: false
        schema:
          title: Quote
          type: string
          default: BTS
        name: quote
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /coinmarketcap/assets:
    get:
      tags:
      - coinmarketcap
      summary: Route Assets
      operationId: route_assets_coinmarketcap_assets_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Route Assets Coinmarketcap Assets Get
                type: array
                items:
                  $ref: '#/components/schemas/AssetOut'
  /coinmarketcap/markets:
    get:
      tags:
      - coinmarketcap
      summary: Route Markets
      operationId: route_markets_coinmarketcap_markets_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Route Markets Coinmarketcap Markets Get
                type: array
                items:
                  $ref: '#/components/schemas/MarketsItemOut'
  /coinmarketcap/ticker:
    get:
      tags:
      - coinmarketcap
      summary: Route Ticker
      operationId: route_ticker_coinmarketcap_ticker_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Route Ticker Coinmarketcap Ticker Get
                type: array
                items:
                  $ref: '#/components/schemas/TickerOut'
  /coinmarketcap/orderbook/{market_pair}:
    get:
      tags:
      - coinmarketcap
      summary: Route Orderbook
      operationId: route_orderbook_coinmarketcap_orderbook__market_pair__get
      parameters:
      - description: The market is depicted by Base_Quote
        required: true
        schema:
          title: Market Pair
          type: string
          description: The market is depicted by Base_Quote
        example: bitCNY_BTS
        name: market_pair
        in: path
      - required: false
        schema:
          title: Depth
          exclusiveMaximum: 500.0
          minimum: 0.0
          type: integer
          default: 100
        name: depth
        in: query
      - required: false
        schema:
          title: Level
          exclusiveMaximum: 4.0
          exclusiveMinimum: 0.0
          type: integer
          default: 3
        name: level
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderbookOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /coinmarketcap/trades/{market_pair}:
    get:
      tags:
      - coinmarketcap
      summary: Route Trades
      operationId: route_trades_coinmarketcap_trades__market_pair__get
      parameters:
      - description: The market is depicted by Base-Quote
        required: true
        schema:
          title: Market Pair
          type: string
          description: The market is depicted by Base-Quote
        example: bitCNY_BTS
        name: market_pair
        in: path
      - required: false
        schema:
          title: Type
          type: string
          default: both
        name: type
        in: query
      - description: Query only trades from blocks with time greater or equal than
          the given value. Format may be 'YYYY-MM-DD' or 'YYYY-MM-DDThh:mm:ssZ', or
          'last24h' for the last 24 hours.
        required: false
        schema:
          title: Since
          type: string
          description: Query only trades from blocks with time greater or equal than
            the given value. Format may be 'YYYY-MM-DD' or 'YYYY-MM-DDThh:mm:ssZ',
            or 'last24h' for the last 24 hours.
          default: last24h
        name: since
        in: query
      - description: Define how many trades to query
        required: false
        schema:
          title: Limit
          maximum: 5000.0
          exclusiveMinimum: 0.0
          type: integer
          description: Define how many trades to query
          default: 1000
        name: limit
        in: query
      - description: Query trades that happened since the indicated tradeID, use lastTradeID
          as returned from previous call for pagination.
        required: false
        schema:
          title: Previoustradeid
          type: integer
          description: Query trades that happened since the indicated tradeID, use
            lastTradeID as returned from previous call for pagination.
        name: previousTradeID
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradesOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /coinmarketcap/asset:
    get:
      tags:
      - coinmarketcap
      summary: Route Asset
      description: Returns details of the given asset symbol
      operationId: route_asset_coinmarketcap_asset_get
      parameters:
      - required: false
        schema:
          title: Symbol
          type: string
          default: BTS
        example: BTS
        name: symbol
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /coinmarketcap/market/{market_pair}:
    get:
      tags:
      - coinmarketcap
      summary: Route Market
      operationId: route_market_coinmarketcap_market__market_pair__get
      parameters:
      - description: The market is depicted by Base-Quote
        required: true
        schema:
          title: Market Pair
          type: string
          description: The market is depicted by Base-Quote
        example: bitCNY_BTS
        name: market_pair
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AssetOut:
      title: AssetOut
      required:
      - name
      - unified_cryptoasset_id
      - can_withdraw
      - can_deposit
      - min_withdraw
      - max_withdraw
      - maker_fee
      - taker_fee
      type: object
      properties:
        name:
          title: Name
          type: string
        unified_cryptoasset_id:
          title: Unified Cryptoasset Id
          type: integer
        can_withdraw:
          title: Can Withdraw
          type: boolean
        can_deposit:
          title: Can Deposit
          type: boolean
        min_withdraw:
          title: Min Withdraw
          type: number
        max_withdraw:
          title: Max Withdraw
          type: number
        maker_fee:
          title: Maker Fee
          type: number
        taker_fee:
          title: Taker Fee
          type: number
    DataSource:
      title: DataSource
      enum:
      - elasticsearch
      - elasticsearch_first
      - blockchain_current_state
      - both
      type: string
      description: 'The default user of this API shouldn''t need to care what the
        datasource is, thus

        meaningful fallbacks need to be present in all cases.'
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    MarketOut:
      title: MarketOut
      required:
      - base
      - quote
      - feeType
      - isSpotTradingAllowed
      - isMarginTradingAllowed
      type: object
      properties:
        base:
          $ref: '#/components/schemas/SymbolOut'
        quote:
          $ref: '#/components/schemas/SymbolOut'
        feeType:
          title: Feetype
          type: string
        isSpotTradingAllowed:
          title: Isspottradingallowed
          type: boolean
        isMarginTradingAllowed:
          title: Ismargintradingallowed
          type: boolean
    MarketsItemOut:
      title: MarketsItemOut
      required:
      - id
      - base
      - quote
      type: object
      properties:
        id:
          title: Id
          type: string
        base:
          title: Base
          type: string
        quote:
          title: Quote
          type: string
    OrderBookFormat:
      title: OrderBookFormat
      enum:
      - native
      - postprocessed
      - detailed
      type: string
      description: "Type of the orderbook format.\n - native: as given by bitshares-core,\
        \ limited to 50 entries\n - postprocessed: queries all limit order and re-calculates\
        \ the order book, limit may be higher\n - detailed: returns limit orders with\
        \ full details (expiration etc.)"
    OrderbookOut:
      title: OrderbookOut
      required:
      - asks
      - bids
      - timestamp
      type: object
      properties:
        asks:
          title: Asks
          type: array
          items:
            type: array
            items:
              type: number
        bids:
          title: Bids
          type: array
          items:
            type: array
            items:
              type: number
        timestamp:
          title: Timestamp of the head block still included in the orderbook, in Zulu
            time
          type: integer
    SortBy:
      title: SortBy
      enum:
      - operation_id_num
      - account_history.sequence
      type: string
      description: An enumeration.
    SymbolOut:
      title: SymbolOut
      required:
      - symbol
      - precision
      type: object
      properties:
        symbol:
          title: Symbol
          type: string
        precision:
          title: Precision
          type: integer
    TickerOut:
      title: TickerOut
      required:
      - base_id
      - quote_id
      - base_symbol
      - quote_symbol
      - last_price
      - quote_volume
      - base_volume
      - isFrozen
      - last_updated
      type: object
      properties:
        base_id:
          title: Base Id
          type: integer
        quote_id:
          title: Quote Id
          type: integer
        base_symbol:
          title: Base Symbol
          type: string
        quote_symbol:
          title: Quote Symbol
          type: string
        last_price:
          title: Last Price
          type: number
        quote_volume:
          title: Quote Volume
          type: number
        base_volume:
          title: Base Volume
          type: number
        isFrozen:
          title: Isfrozen
          type: boolean
        last_updated:
          title: Last Updated
          type: integer
    TradeOut:
      title: TradeOut
      required:
      - tradeID
      - price
      - base_volume
      - quote_volume
      - trade_timestamp
      - type
      type: object
      properties:
        tradeID:
          title: Tradeid
          type: integer
        price:
          title: Price
          type: number
        base_volume:
          title: Base Volume
          type: integer
        quote_volume:
          title: Quote Volume
          type: integer
        trade_timestamp:
          title: UNIX timestamp of the block that contains this trade
          type: string
        type:
          title: Used to determine whether or not the trade originated as a buy or
            sell. 'buy' Identifies an ask was removed from the order book, 'sell'
            Identifies a bid was removed from the order book.
          type: string
    TradesOut:
      title: TradesOut
      required:
      - trades
      type: object
      properties:
        lastTradeID:
          title: TradeID of the last returned trade, used for pagination. None if
            all have been returned
          type: integer
        trades:
          title: Trades
          type: array
          items:
            $ref: '#/components/schemas/TradeOut'
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
